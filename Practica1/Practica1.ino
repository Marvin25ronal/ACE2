#include "Abecedario.h"
Abecedario abc;
#include "LedControl.h"


LedControl lc = LedControl(31, 33, 30, 1); //se cambian los pines despues :D

unsigned char matrix[8][8];
char mensaje[11] = "holagruponn";
int posMat = 0;
int movLetrero = 100;
int auxmovLetrero = 0;

const unsigned char
la[6][8] = {{0, 0, 0, 0, 0, 0, 0, 0}, {0, 1, 1, 1, 1, 1, 1, 1}, {1, 0, 0, 0, 1, 0, 0, 0}, {1, 0, 0, 0, 1, 0, 0, 0}, {0, 1, 1, 1, 1, 1, 1, 1}, {0, 0, 0, 0, 0, 0, 0, 0}}
, lb[6][8] = {{1, 1, 1, 1, 1, 1, 1, 1}, {1, 0, 0, 0, 0, 0, 0, 1}, {1, 0, 0, 0, 0, 0, 0, 1}, {1, 0, 0, 0, 0, 0, 0, 1}, {1, 0, 0, 0, 1, 0, 0, 1}, {0, 1, 1, 1, 0, 1, 1, 0}}
, lcc[6][8] = {{0, 0, 0, 0, 0, 0, 0, 0}, {0, 1, 1, 1, 1, 1, 1, 0}, {1, 0, 0, 0, 0, 0, 0, 1}, {1, 0, 0, 0, 0, 0, 0, 1}, {1, 0, 0, 0, 0, 0, 0, 1}, {0, 0, 0, 0, 0, 0, 0, 0}}
, ld[6][8] = {{1, 1, 1, 1, 1, 1, 1, 1}, {1, 0, 0, 0, 0, 0, 0, 1}, {1, 0, 0, 0, 0, 0, 0, 1}, {1, 0, 0, 0, 0, 0, 0, 1}, {1, 1, 0, 0, 0, 0, 1, 1}, {0, 1, 1, 1, 1, 1, 1, 0}}
, le[6][8] = {{0, 0, 0, 0, 0, 0, 0, 0}, {1, 1, 1, 1, 1, 1, 1, 1}, {1, 0, 0, 1, 0, 0, 0, 1}, {1, 0, 0, 1, 0, 0, 0, 1}, {1, 0, 0, 1, 0, 0, 0, 1}, {0, 0, 0, 0, 0, 0, 0, 0}}
, lf[6][8] = {{1, 1, 1, 1, 1, 1, 1, 1}, {1, 0, 0, 1, 0, 0, 0, 0}, {1, 0, 0, 1, 0, 0, 0, 0}, {1, 0, 0, 1, 0, 0, 0, 0}, {1, 0, 0, 1, 0, 0, 0, 0}, {1, 0, 0, 0, 0, 0, 0, 0}}
, lg[6][8] = {{0, 0, 0, 0, 0, 0, 0, 0}, {0, 1, 1, 1, 1, 1, 1, 0}, {1, 0, 0, 0, 0, 0, 0, 1}, {1, 0, 0, 0, 1, 0, 0, 1}, {0, 1, 0, 0, 1, 1, 1, 0}, {0, 0, 0, 0, 0, 0, 0, 0}}
, lh[6][8] = {{1, 1, 1, 1, 1, 1, 1, 1}, {0, 0, 0, 1, 1, 0, 0, 0}, {0, 0, 0, 1, 1, 0, 0, 0}, {0, 0, 0, 1, 1, 0, 0, 0}, {0, 0, 0, 1, 1, 0, 0, 0}, {1, 1, 1, 1, 1, 1, 1, 1}}
, li[6][8] = {{0, 0, 0, 0, 0, 0, 0, 0}, {1, 0, 0, 0, 0, 0, 0, 1}, {1, 1, 1, 1, 1, 1, 1, 1}, {1, 1, 1, 1, 1, 1, 1, 1}, {1, 0, 0, 0, 0, 0, 0, 1}, {0, 0, 0, 0, 0, 0, 0, 0}}
, lj[6][8] = {{1, 0, 0, 0, 0, 0, 1, 0}, {1, 0, 0, 0, 0, 0, 0, 1}, {1, 1, 1, 1, 1, 1, 1, 1}, {1, 1, 1, 1, 1, 1, 1, 1}, {1, 0, 0, 0, 0, 0, 0, 0}, {1, 0, 0, 0, 0, 0, 0, 0}}
, lk[6][8] = {{1, 1, 1, 1, 1, 1, 1, 1}, {0, 0, 0, 0, 1, 0, 0, 0}, {0, 0, 0, 1, 1, 0, 0, 0}, {0, 0, 1, 0, 0, 1, 0, 0}, {0, 1, 0, 0, 0, 0, 1, 0}, {1, 0, 0, 0, 0, 0, 0, 1}}
, ll[6][8] = {{1, 1, 1, 1, 1, 1, 1, 1}, {0, 0, 0, 0, 0, 0, 0, 1}, {0, 0, 0, 0, 0, 0, 0, 1}, {0, 0, 0, 0, 0, 0, 0, 1}, {0, 0, 0, 0, 0, 0, 0, 1}, {0, 0, 0, 0, 0, 0, 0, 1}}
, lm[6][8] = {{1, 1, 1, 1, 1, 1, 1, 1}, {0, 1, 1, 0, 0, 0, 0, 0}, {0, 0, 1, 1, 1, 0, 0, 0}, {0, 0, 1, 1, 1, 0, 0, 0}, {0, 1, 1, 0, 0, 0, 0, 0}, {1, 1, 1, 1, 1, 1, 1, 1}}
, ln[6][8] = {{0, 0, 0, 0, 0, 0, 0, 0}, {1, 1, 1, 1, 1, 1, 1, 1}, {0, 0, 1, 0, 0, 0, 0, 0}, {0, 0, 0, 1, 1, 0, 0, 0}, {1, 1, 1, 1, 1, 1, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}}
, lp[6][8] = {{0, 0, 0, 0, 0, 0, 0, 0}, {1, 1, 1, 1, 1, 1, 1, 1}, {1, 0, 0, 1, 0, 0, 0, 0}, {1, 0, 0, 1, 0, 0, 0, 0}, {1, 1, 1, 1, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}}
, lq[6][8] = {{0, 1, 1, 1, 1, 1, 1, 0}, {1, 0, 0, 0, 0, 0, 0, 1}, {1, 0, 0, 0, 1, 0, 0, 1}, {1, 0, 0, 0, 0, 1, 0, 1}, {1, 0, 0, 0, 0, 0, 1, 0}, {0, 1, 1, 1, 1, 1, 0, 1}}
, lr[6][8] = {{0, 0, 0, 0, 0, 0, 0, 0}, {1, 1, 1, 1, 1, 1, 1, 1}, {1, 0, 0, 1, 1, 0, 0, 0}, {1, 0, 0, 1, 0, 1, 0, 0}, {1, 1, 1, 1, 0, 0, 1, 1}, {0, 0, 0, 0, 0, 0, 0, 0}}
, ls[6][8] = {{0, 0, 0, 0, 0, 0, 0, 0}, {0, 1, 1, 0, 0, 0, 1, 0}, {1, 0, 0, 1, 0, 0, 0, 1}, {1, 0, 0, 1, 0, 0, 0, 1}, {0, 1, 0, 0, 1, 1, 1, 0}, {0, 0, 0, 0, 0, 0, 0, 0}}
, lt[6][8] = {{0, 0, 0, 0, 0, 0, 0, 0}, {1, 1, 0, 0, 0, 0, 0, 0}, {1, 1, 1, 1, 1, 1, 1, 1}, {1, 1, 1, 1, 1, 1, 1, 1}, {1, 1, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}}
, lu[6][8] = {{0, 0, 0, 0, 0, 0, 0, 0}, {1, 1, 1, 1, 1, 1, 1, 0}, {0, 0, 0, 0, 0, 0, 0, 1}, {0, 0, 0, 0, 0, 0, 0, 1}, {1, 1, 1, 1, 1, 1, 1, 0}, {0, 0, 0, 0, 0, 0, 0, 0}}
, lv[6][8] = {{1, 1, 1, 1, 0, 0, 0, 0}, {0, 0, 0, 0, 1, 1, 0, 0}, {0, 0, 0, 0, 0, 0, 1, 1}, {0, 0, 0, 0, 0, 0, 1, 1}, {0, 0, 0, 0, 1, 1, 0, 0}, {1, 1, 1, 1, 0, 0, 0, 0}}
, lw[6][8] = {{1, 1, 1, 1, 1, 1, 1, 1}, {0, 0, 0, 0, 0, 0, 1, 0}, {0, 0, 1, 1, 1, 1, 0, 0}, {0, 0, 1, 1, 1, 1, 0, 0}, {0, 0, 0, 0, 0, 0, 1, 0}, {1, 1, 1, 1, 1, 1, 1, 1}}
, lx[6][8] = {{1, 0, 0, 0, 0, 0, 0, 1}, {0, 1, 1, 0, 0, 1, 1, 0}, {0, 0, 0, 1, 1, 0, 0, 0}, {0, 0, 0, 1, 1, 0, 0, 0}, {0, 1, 1, 0, 0, 1, 1, 0}, {1, 0, 0, 0, 0, 0, 0, 1}}
, ly[6][8] = {{1, 0, 0, 0, 0, 0, 0, 0}, {0, 1, 1, 0, 0, 0, 0, 0}, {0, 0, 0, 1, 1, 1, 1, 1}, {0, 0, 0, 1, 1, 1, 1, 1}, {0, 1, 1, 0, 0, 0, 0, 0}, {1, 0, 0, 0, 0, 0, 0, 0}}
, lz[6][8] = {{1, 0, 0, 0, 0, 1, 1, 1}, {1, 0, 0, 0, 1, 1, 1, 1}, {1, 0, 0, 1, 1, 0, 0, 1}, {1, 0, 1, 1, 0, 0, 0, 1}, {1, 1, 1, 0, 0, 0, 0, 1}, {1, 1, 0, 0, 0, 0, 0, 1}}

, n0[6][8] = {{0, 0, 0, 0, 0, 0, 0, 0}, {1, 1, 1, 1, 1, 1, 1, 1}, {1, 0, 0, 0, 0, 0, 0, 1}, {1, 0, 0, 0, 0, 0, 0, 1}, {1, 1, 1, 1, 1, 1, 1, 1}, {0, 0, 0, 0, 0, 0, 0, 0}}
, n1[6][8] = {{0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 1, 0, 0, 0, 0, 0}, {0, 1, 1, 0, 0, 0, 0, 0}, {1, 1, 1, 1, 1, 1, 1, 1}, {1, 1, 1, 1, 1, 1, 1, 1}, {0, 0, 0, 0, 0, 0, 0, 0}}
, n2[6][8] = {{0, 0, 0, 0, 0, 0, 0, 0}, {0, 1, 1, 0, 0, 0, 1, 1}, {1, 0, 0, 0, 0, 1, 0, 1}, {1, 0, 0, 0, 1, 0, 0, 1}, {0, 1, 1, 1, 0, 0, 1, 1}, {0, 0, 0, 0, 0, 0, 0, 0}}
, n3[6][8] = {{0, 0, 0, 0, 0, 0, 0, 0}, {0, 1, 0, 0, 0, 0, 1, 0}, {1, 0, 0, 1, 0, 0, 0, 1}, {1, 0, 1, 0, 1, 0, 0, 1}, {0, 1, 0, 0, 0, 1, 1, 0}, {0, 0, 0, 0, 0, 0, 0, 0}}
, n4[6][8] = {{0, 0, 0, 0, 0, 0, 0, 0}, {1, 1, 1, 1, 0, 0, 0, 0}, {0, 0, 0, 1, 0, 0, 0, 0}, {1, 1, 1, 1, 1, 1, 1, 1}, {0, 0, 0, 1, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}}
, n5[6][8] = {{1, 1, 1, 1, 0, 0, 1, 0}, {1, 0, 0, 1, 0, 0, 0, 1}, {1, 0, 0, 1, 0, 0, 0, 1}, {1, 0, 0, 1, 0, 0, 0, 1}, {1, 0, 0, 0, 1, 0, 0, 1}, {1, 0, 0, 0, 0, 1, 1, 0}}
, n6[6][8] = {{0, 1, 1, 1, 1, 1, 1, 0}, {1, 0, 0, 0, 1, 0, 0, 1}, {1, 0, 0, 0, 1, 0, 0, 1}, {1, 0, 0, 0, 1, 0, 0, 1}, {0, 1, 0, 0, 1, 0, 0, 1}, {0, 0, 1, 0, 0, 1, 1, 0}}
, n7[6][8] = {{1, 1, 0, 0, 0, 0, 0, 0}, {1, 0, 0, 0, 0, 0, 0, 0}, {1, 0, 0, 0, 0, 0, 0, 0}, {1, 0, 0, 1, 1, 1, 1, 1}, {1, 0, 1, 0, 0, 0, 0, 0}, {1, 1, 0, 0, 0, 0, 0, 0}}
, n8[6][8] = {{0, 1, 1, 0, 1, 1, 1, 0}, {1, 0, 0, 1, 0, 0, 0, 1}, {1, 0, 0, 1, 0, 0, 0, 1}, {1, 0, 0, 1, 0, 0, 0, 1}, {1, 0, 0, 1, 0, 0, 0, 1}, {0, 1, 1, 0, 1, 1, 1, 0}}
, n9[6][8] = {{0, 1, 1, 0, 0, 0, 1, 0}, {1, 0, 0, 1, 0, 0, 0, 1}, {1, 0, 0, 1, 0, 0, 0, 1}, {1, 0, 0, 1, 0, 0, 0, 1}, {1, 0, 0, 1, 0, 0, 0, 1}, {0, 1, 1, 1, 1, 1, 1, 0}};

const unsigned char
ma[2] = {0, 1},       mb[4] = {1, 0, 0, 0},      mc[4] = {1, 0, 1, 0},    md[3] = {1, 0, 0},      me[1] = {0} ,         mf[4] = {0, 0, 1, 0}
                              , mg[3] = {1, 1, 0},     mh[4] = {0, 0, 0, 0},      mi[2] = {0, 0},        mj[4] = {0, 1, 1, 1},    mk[3] = {1, 0, 1},      ml[4] = {0, 1, 0, 0}
                                        , mm[2] = {1, 1},       mn[2] = {1, 0},          mo[3] = {1, 1, 1},      mp[4] = {0, 1, 1, 0},    mq[4] = {1, 1, 0, 1},    mr[3] = {0, 1, 0}
                                            , ms[3] = {0, 0, 0},     mt[1] = {1},            mu[3] = {0, 0, 1},      mv[4] = {0, 0, 0, 1},    mw[3] = {0, 1, 1},      mx[4] = {1, 0, 0, 1}
                                                , my[4] = {1, 0, 1, 1},   mz[4] = {1, 1, 0, 0},      m1[5] = {0, 1, 1, 1, 1},  m2[5] = {0, 0, 1, 1, 1},  m3[5] = {0, 0, 0, 1, 1},  m4[5] = {0, 0, 0, 0, 1}
                                                    , m5[5] = {0, 0, 0, 0, 0}, m6[5] = {1, 0, 0, 0, 0},    m7[5] = {1, 1, 0, 0, 0},  m8[5] = {1, 1, 1, 0, 0},  m9[5] = {1, 1, 1, 1, 0},  m0[5] = {1, 1, 1, 1, 1};



void prueba(int x , unsigned char arr[6][8]) {
  for (int a = 0; a < 6; a++) {
    if (a + x < 0) {
      continue;
    }
    if (a + x > 7) {
      return;
    }
    for (int b = 0; b < 8; b++) {
      matrix[x + a][b] = arr[a][b];
    }
  }
}




void setArr(int x , char c) {
  if (x < -6 || 17 < x) {
    return;
  }
  switch (c) {
    case  'a': prueba(x , la); break;
    case  'b': prueba(x , lb); break;
    case  'c': prueba(x , lcc); break;
    case  'd': prueba(x , ld); break;
    case  'e': prueba(x , le); break;
    case  'f': prueba(x , lf); break;
    case  'g': prueba(x , lg); break;
    case  'h': prueba(x , lh); break;
    case  'i': prueba(x , li); break;
    case  'j': prueba(x , lj); break;
    case  'k': prueba(x , lk); break;
    case  'm': prueba(x , lm); break;
    case  'n': prueba(x , ln); break;
    case  'o': prueba(x , n0); break;
    case  'p': prueba(x , lp); break;
    case  'q': prueba(x , lq); break;
    case  'r': prueba(x , lr); break;
    case  's': prueba(x , ls); break;
    case  't': prueba(x , lt); break;
    case  'u': prueba(x , lu); break;
    case  'v': prueba(x , lv); break;
    case  'w': prueba(x , lw); break;
    case  'x': prueba(x , lx); break;
    case  'y': prueba(x , ly); break;
    case  'z': prueba(x , lz); break;

    case  '0': prueba(x , n0); break;
    case  '1': prueba(x , n1); break;
    case  '2': prueba(x , n2); break;
    case  '3': prueba(x , n3); break;
    case  '4': prueba(x , n4); break;
    case  '5': prueba(x , n5); break;
    case  '6': prueba(x , n6); break;
    case  '7': prueba(x , n7); break;
    case  '8': prueba(x , n8); break;
    case  '9': prueba(x , n9); break;
  }
}


//setea cada letra en su lugar
void setMat(int x) {
  for (int a = 0; a < 11; a++) {
    setArr(x, mensaje[a]);
    x += 6;
  }
}

//VARIABLE PARA EL MODO, MODO 1 POR DEFECTO
volatile unsigned char modo = 1;

void setup() {
  // put your setup code here, to run once:
  Serial.begin(9600);

  //Activar el boton para el cambio de modos
  attachInterrupt(digitalPinToInterrupt(2), cambiarModo, RISING);
}

void loop() {
  // put your main code here, to run repeatedly:
  abc.Llenar();

  auxmovLetrero++;
  if (auxmovLetrero >= movLetrero) {
    auxmovLetrero = 0;
    setMat(posMat);
    posMat -= 1;
    //n letras de la frase * 6 hola grupo, se cambia si no agarra jaja
    if (posMat == - 54) { //para que sea circular el retrero
      posMat = 9;
    }
    for (int b = 0; b < 8; b++) {
      for (int a = 0; a < 8; a++) {
        lc.setLed(0 , b, a , matrix[b][a]); // se colocan los pines de la matriz con driver
      }
    }
  }
  delay(1);
}

//Metodo llamada en la interrupcion para el cambio de modo
void cambiarModo() {
  modo++;
  if (modo > 3)
    modo = 3;
}
